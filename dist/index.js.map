{"version":3,"sources":["../src/index.js"],"names":["require","config","app","server","createServer","use","exposedHeaders","corsHeaders","json","limit","bodyLimit","showStatusCode","showDefaultMessage","urlencoded","extended","set","db","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAVAA,QAAQ,QAAR,EAAkBC,MAAlB;;;AAYA,IAAIC,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,oBAAK,EAACC,gBAAgB,iBAAOC,WAAxB,EAAL,CAAR;;AAEAL,IAAIG,GAAJ,CAAQ,qBAAWG,IAAX,CAAgB,EAACC,OAAO,iBAAOC,SAAf,EAAhB,CAAR;;AAEA;AACAR,IAAIG,GAAJ,CAAQ,mCAAa,EAACM,gBAAgB,IAAjB,EAAuBC,oBAAoB,IAA3C,EAAb,CAAR;;AAEA;AACAV,IAAIG,GAAJ,CAAQ,qBAAWQ,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;;AAEA;AACA,kBAAa,cAAM;AACjB;AACAZ,MAAIa,GAAJ,CAAQ,IAAR,EAAcC,EAAd;;AAEA;AACAd,MAAIG,GAAJ,CAAQ,0BAAW,EAACJ,wBAAD,EAASe,MAAT,EAAX,CAAR;;AAEA;AACAd,MAAIG,GAAJ,CAAQ,MAAR,EAAgB,mBAAI,EAACJ,wBAAD,EAASe,MAAT,EAAJ,CAAhB;;AAEAd,MACGC,MADH,CAEGc,MAFH,CAEUC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,IAFrC,EAE2C,YAAM;AAC7CC,YAAQC,GAAR,sBAA+BrB,IAAIC,MAAJ,CAAWqB,OAAX,GAAqBH,IAApD;AACD,GAJH;AAKD,CAfD;;kBAiBenB,G","file":"index.js","sourcesContent":["require(\"dotenv\").config();\r\nimport http from \"http\";\r\nimport express from \"express\";\r\nimport cors from \"cors\";\r\nimport morgan from \"morgan\";\r\nimport restResponse from \"express-rest-response\";\r\nimport bodyParser from \"body-parser\";\r\nimport initializeDb from \"./db\";\r\nimport middleware from \"./middleware\";\r\nimport api from \"./api\";\r\nimport config from \"./config.json\";\r\n\r\nlet app = express();\r\napp.server = http.createServer(app);\r\n\r\n// logger\r\napp.use(morgan(\"dev\"));\r\n\r\n// 3rd party middleware\r\napp.use(cors({exposedHeaders: config.corsHeaders}));\r\n\r\napp.use(bodyParser.json({limit: config.bodyLimit}));\r\n\r\n// json response middleware\r\napp.use(restResponse({showStatusCode: true, showDefaultMessage: true}));\r\n\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({extended: false}));\r\n\r\n// connect to db\r\ninitializeDb(db => {\r\n  // set db as global object\r\n  app.set('db', db);\r\n\r\n  // internal middleware\r\n  app.use(middleware({config, db}));\r\n\r\n  // api router\r\n  app.use(\"/api\", api({config, db}));\r\n\r\n  app\r\n    .server\r\n    .listen(process.env.PORT || config.port, () => {\r\n      console.log(`Started on port ${app.server.address().port}`);\r\n    });\r\n});\r\n\r\nexport default app;\r\n"]}