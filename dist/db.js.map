{"version":3,"sources":["../src/db.js"],"names":["Promise","require","mongodb","promisifyAll","pino","MongoClient","url","process","env","DB_CONN_URL","connect","err","db","error","info","callback"],"mappings":";;;;;AAAA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACA,IAAMC,UAAUF,QAAQG,YAAR,CAAqBF,QAAQ,SAAR,CAArB,CAAhB;AACA,IAAMG,OAAOH,QAAQ,MAAR,GAAb;;kBAEe,oBAAY;AACzB;;AAEA,MAAII,cAAcH,QAAQG,WAA1B;;AAEA,MAAIC,MAAMC,QAAQC,GAAR,CAAYC,WAAtB;;AAEAJ,cAAYK,OAAZ,CAAoBJ,GAApB,EAAyB,UAASK,GAAT,EAAcC,EAAd,EAAkB;AACzC,QAAID,GAAJ,EAAS;AACPP,WAAKS,KAAL,CAAW,iDAAX,EAA8DF,GAA9D;AACD,KAFD,MAEO;AACLP,WAAKU,IAAL,CAAU,2BAAV,EAAuCR,GAAvC;;AAEAS,eAASH,EAAT;;AAEA;AACD;AACF,GAVD;AAWD,C","file":"db.js","sourcesContent":["const Promise = require(\"bluebird\");\r\nconst mongodb = Promise.promisifyAll(require(\"mongodb\"));\r\nconst pino = require(\"pino\")();\r\n\r\nexport default callback => {\r\n  // connect to a database if needed, then pass it to `callback`:\r\n\r\n  var MongoClient = mongodb.MongoClient;\r\n\r\n  var url = process.env.DB_CONN_URL;\r\n\r\n  MongoClient.connect(url, function(err, db) {\r\n    if (err) {\r\n      pino.error(\"Unable to connect to the mongoDB server. Error:\", err);\r\n    } else {\r\n      pino.info(\"Connection established to\", url);\r\n\r\n      callback(db);\r\n\r\n      // db.close();\r\n    }\r\n  });\r\n};\r\n"]}